<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cloud.delaye</groupId>
	<artifactId>java-backend</artifactId>
	
	<version>0.1-SNAPSHOT</version>
	<name>Java Backend</name>
	<packaging>jar</packaging>
	
	<inceptionYear>2017</inceptionYear>
	
	<scm>
		<connection>scm:git:git@github.com:jonesbusy/java-backend.git</connection>
		<developerConnection>scm:git:git@github.com:jonesbusy/java-backend.git</developerConnection>
		<url>https://github.com/jonesbusy/iot-java-backend</url>
		<tag>HEAD</tag>
	</scm>
	
	<developers>
		<developer>
			<name>Valentin Delaye</name>
			<email>jonesbusy@gmail.com</email>
		</developer>
	</developers>
		
	<properties>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- MySQL connector -->
		<delaye.cloud.mysql.connector.version>8.0.16</delaye.cloud.mysql.connector.version>
		
		<!-- Database connection -->
		<delaye.cloud.backend.db.name>JAVA-BACKEND</delaye.cloud.backend.db.name>
		<delaye.cloud.backend.db.driver>com.mysql.jdbc.Driver</delaye.cloud.backend.db.driver>
		<delaye.cloud.backend.db.port>3306</delaye.cloud.backend.db.port>
		<delaye.cloud.backend.db.username>JAVA-BACKEND</delaye.cloud.backend.db.username>
		<delaye.cloud.backend.db.password>JAVA-BACKEND</delaye.cloud.backend.db.password>
		<delaye.cloud.backend.db.host>java-backend-db</delaye.cloud.backend.db.host>
		<delaye.cloud.backend.db.url>//${delaye.cloud.backend.db.host}:${delaye.cloud.backend.db.port}</delaye.cloud.backend.db.url>
		<delaye.cloud.backend.db.location>${delaye.cloud.backend.db.url}/${delaye.cloud.backend.db.name}</delaye.cloud.backend.db.location>	
		
		<delaye.cloud.database.current>${delaye.cloud.backend.db.name}</delaye.cloud.database.current>
		
		<!-- To skip the generation of package -->
		<delaye.cloud.build.package.skip>false</delaye.cloud.build.package.skip>
		
		<!-- To skip the generation of javadoc -->
		<delaye.cloud.javadoc.generation.skip>true</delaye.cloud.javadoc.generation.skip>
		
		<!-- The URL of the MQTT broker -->
		<delaye.cloud.mqtt.broker.url>tcp://127.0.0.1:1883</delaye.cloud.mqtt.broker.url>
		<delaye.cloud.mqtt.broker.username>iot</delaye.cloud.mqtt.broker.username>
		<delaye.cloud.mqtt.broker.password>iot</delaye.cloud.mqtt.broker.password>
				
	</properties>

	<profiles>
		<profile>
			<id>test</id>

			<properties>
				<!-- Do not generate java doc and package when testing -->
				<delaye.cloud.javadoc.generation.skip>true</delaye.cloud.javadoc.generation.skip>
				<delaye.cloud.build.package.skip>true</delaye.cloud.build.package.skip>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<configuration>
							<quiet>true</quiet>
						</configuration>
					</plugin>
				</plugins>				
			</build>
			
		</profile>
                
                
		<profile>
			<id>testJunitUnit</id>
			
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>false</skip>
							<properties>
								<property>
									<name>listener</name>
									<value>io.probedock.client.junit.ProbeListener,io.probedock.rt.client.junit.ProbeRTListener</value>
								</property>
							</properties>	
						</configuration>
					</plugin>
				</plugins>
				
				<testResources>
					<testResource>
						<directory>src/test/resources/META-INF</directory>
						<filtering>true</filtering>
					</testResource>
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
					</testResource>
				</testResources>
				
			</build>
		</profile>
		
		<profile>
			
			<id>createSchema</id>
			
			<build>
				
				<plugins>	
					
					<!-- Plugin to create the schema and tables -->
					<plugin>
						<groupId>io.github.divinespear</groupId>
						<artifactId>jpa-schema-maven-plugin</artifactId>
						<version>0.1.12</version>
						<executions>
							<execution>
								<id>generate</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<databaseAction>drop-and-create</databaseAction>
									<databaseProductName>MySQL</databaseProductName>
									<persistenceUnitName>GenPU</persistenceUnitName>
									<jdbcDriver>${delaye.cloud.backend.db.driver}</jdbcDriver>
									<jdbcUrl>jdbc:mysql:${delaye.cloud.backend.db.location}</jdbcUrl>
									<jdbcUser>${delaye.cloud.backend.db.username}</jdbcUser>
									<jdbcPassword>${delaye.cloud.backend.db.password}</jdbcPassword>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${delaye.cloud.mysql.connector.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					
					<!-- Insert data into the DB -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<executions>

							<!-- Drop and crete schema -->
							<execution>
								<id>createSchema</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<encoding>UTF-8</encoding>
									<url>jdbc:mysql:${delaye.cloud.backend.db.url}</url>
									<srcFiles>
										<srcFile>target/classes/drop-and-create.sql</srcFile>
									</srcFiles>
									<skipOnConnectionError>false</skipOnConnectionError>
								</configuration>
							</execution>
							
							<!-- Insert SQL -->
							<execution>
								<id>sqlInsert</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<encoding>UTF-8</encoding>
									<url>jdbc:mysql:${delaye.cloud.backend.db.location}</url>
									<srcFiles>
										<srcFile>target/classes/insert.sql</srcFile>
									</srcFiles>
									<skipOnConnectionError>false</skipOnConnectionError>
								</configuration>
							</execution>

						</executions>

						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${delaye.cloud.mysql.connector.version}</version>
							</dependency>
						</dependencies>

						<configuration>
							<driver>${delaye.cloud.backend.db.driver}</driver>
							<autocommit>true</autocommit>
							<username>${delaye.cloud.backend.db.username}</username>
							<password>${delaye.cloud.backend.db.password}</password>
						</configuration>

					</plugin>
					
				</plugins>
				
			</build>
			
		</profile>
		
	</profiles>

	<build>
		<plugins>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.6.1</version>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<escapeString>\</escapeString>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<compilerArgs>
						<arg>-Xlint</arg>
						<arg>-Xdoclint:all</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>install</phase>
						<configuration>
							<skip>${delaye.cloud.javadoc.generation.skip}</skip>
						</configuration>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
					<execution>
						<id>aggregate</id>
						<phase>site</phase>
						<goals>
							<goal>aggregate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<mainClass>cloud.delaye.backend.Main</mainClass>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<outputDirectory>package</outputDirectory>
							
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>cloud.delaye.backend.Main</mainClass>
								</manifest>
							</archive>

							<descriptors>
								<descriptor>dist.xml</descriptor>
								<descriptor>service.xml</descriptor>
							</descriptors>

							<skipAssembly>${delaye.cloud.build.package.skip}</skipAssembly>

						</configuration>						
					</execution>
				</executions>

			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<excludeScope>test</excludeScope>
							<outputDirectory>package/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		
		<resources>
			
			<!-- Logger resource -->
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>logback.xml</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			
			<!-- SH script resource -->
			<resource>
				<directory>src/main/resources/scripts</directory>
				<targetPath>scripts</targetPath>
				<includes>
					<include>*.sh</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			
			
			<!-- Standard properties file -->
			<resource>
				<directory>src/main/resources</directory>
				<targetPath>properties</targetPath>
				<includes>
					<include>*.properties</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			
			<!-- SQL scripts -->
			<resource>
				<directory>src/main/resources/sql</directory>
				<includes>
					<include>*.sql</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			
			<!-- Quartz scheduler resource -->
			<resource>
				<directory>src/main/resources/quartz</directory>
				<filtering>true</filtering>
				<includes>
					<include>quartz_clustered.properties</include>
					<include>quartz_standalone.properties</include>
					<include>quartzcron.properties</include>
				</includes>
			</resource>

			<!-- Persistence unit -->
			<resource>
				<directory>src/main/resources/META-INF</directory>
				<targetPath>META-INF</targetPath>
				<includes>
					<include>persistence.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>

		</resources>
				
	</build>
	
	<dependencies>
		
		<!-- Java EE -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
			<version>2.1.0</version>
		</dependency>
	 
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
		</dependency>
		
		<dependency>  
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- MQTT client -->
		<dependency>
			<groupId>org.fusesource.mqtt-client</groupId>
			<artifactId>mqtt-client</artifactId>
			<version>1.12</version>
		</dependency>
			
		<!-- Quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>2.2.2</version>
		</dependency>
		
		<!-- Undertow HTTP Server -->
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-core</artifactId>
			<version>2.0.23.Final</version>
		</dependency>
		
		<dependency>
			<groupId>io.undertow</groupId>
			<artifactId>undertow-servlet</artifactId>
			<version>1.2.9.Final</version>
		</dependency>
		
		<!-- Jackson + Rest Easy -->
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>3.0.16.Final</version>
		</dependency>	
		
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-multipart-provider</artifactId>
			<version>3.0.16.Final</version>
		</dependency>
			
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-undertow</artifactId>
			<version>3.0.16.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-cdi</artifactId>
			<version>3.0.16.Final</version>
		</dependency>
		
		<!-- Weld containers -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core</artifactId>
			<version>2.2.14.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.jboss.weld.servlet</groupId>
			<artifactId>weld-servlet-core</artifactId>
			<version>2.2.14.Final</version>
		</dependency>	
		
		<!-- Logger -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.18</version>
		</dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.6</version>
		</dependency>
		
		<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
			<version>4.6</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.18</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>1.7.18</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.12</version>
		</dependency>
	
		<!-- CLI -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		<!-- JPA persistence provider -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>2.6.2</version>
		</dependency>
		
		<!-- MySQL connector -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>	
		
		<dependency>
			<groupId>io.probedock.jee</groupId>
			<artifactId>jee-validation</artifactId>
			<version>0.2.0</version>
		</dependency>		
			
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator-cdi</artifactId>
			<version>5.1.3.Final</version>
		</dependency>	
		
		<!-- Probe Dock Testing -->
		<dependency>
			<groupId>io.probedock.client</groupId>
			<artifactId>probedock-junit</artifactId>
			<version>0.5.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>io.probedock.rt.client</groupId>
			<artifactId>probedock-rt-junit</artifactId>
			<version>0.4.3</version>
			<scope>test</scope>
		</dependency>
                                			
	</dependencies>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<reportSets>
					<reportSet>
						<id>default</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
							<report>test-aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>		
	</reporting>

</project>
